$spaces: 0, 4, 8, 16, 24, 32, 40, 48, 64, 80, 96, 112, 128, 256, 512;
$typography: 32, 26, 22, 18, 16, 14, 12;
$weights: 300, 400, 500, 600, 700, 800;
$displays: block, inline-block, inline, flex, grid;
$positions: absolute, relative, sticky, fixed;
$sides: 'all', 'top', 'right', 'bottom', 'left';

// Spacing
@each $space in $spaces {
  $i: index($spaces, $space) - 1;
  $v: #{$space}px;

  .p-#{$i} {
    padding: $v;
  }
  .p-x-#{$i} {
    padding-right: $v;
    padding-left: $v;
  }
  .p-y-#{$i} {
    padding-top: $v;
    padding-bottom: $v;
  }
  .m-#{$i} {
    margin: $v;
  }
  .m-x-#{$i} {
    margin-right: $v;
    margin-left: $v;
  }
  .m-y-#{$i} {
    margin-top: $v;
    margin-bottom: $v;
  }
  .h-#{$i} {
    height: $v;
  }
  .w-#{$i} {
    width: $v;
  }
  @each $side in $sides {
    $s: str-slice($side, 0, 1);
    .p-#{$s}-#{$i}{
      padding-#{$side}: $v;
    }
    .m-#{$s}-#{$i} {
      margin-#{$side}: $v;
    }
  }
}
.m-r-auto {
  margin-right: auto;
}
.m-l-auto {
  margin-left: auto;
}
// Position
@each $position in $positions {
  .pos-#{$position} {
    position: $position;
  }
}
.pos-sticky-t {
  position: sticky;
  top: 0;
}
.pos-absolute-b {
  @extend .pos-absolute;
  bottom: 0;
}
.pos-absolute-r {
  @extend .pos-absolute;
  right: 0;
}
// Display
@each $display in $displays {
  .d-#{$display} {
    display: $display;
  }
}
// Flex
.flex-1 {
  flex: 1;
}
.direction-column {
  flex-direction: column;
}
.direction-column-reverse {
  flex-direction: column-reverse;
}
.justify-content-center {
  justify-content: center;
}
.justify-content-end {
  justify-content: flex-end;
}
.justify-content-between {
  justify-content: space-between;
}
.align-items-start {
  align-items: flex-start;
}
.align-items-center {
  align-items: center;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.flex-grow-1 {
  flex-grow: 1;
}
.flex-wrap {
  flex-wrap: wrap;
}
// Typography
@each $size in $typography {
  $i: index($typography, $size) - 1;

  .f-#{$i} {
    font-size: #{$size}px;
  }
}
@each $weight in $weights {
  .fw-#{$weight} {
    font-weight: $weight;
  }
}
// Colors
.bg-color {
  background-color: var(--bg-color);
}
.bg-primary {
  background-color: var(--primary-color);
}
.bg-secondary {
  background-color: var(--secondary-color);
}
.bg-accent {
  background-color: var(--accent-color);
}
.bg-border {
  background-color: var(--border-color);
}
.c-primary {
  color: var(--primary-color);
}
.c-secondary {
  color: var(--secondary-color);
}
.c-accent {
  color: var(--accent-color);
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-hidden {
  overflow: hidden;
}
.overflow-y-auto {
  overflow-y: auto;
}
.object-fit-cover {
  object-fit: cover;
}
.object-fit-contain {
  object-fit: contain;
}
.vertical-align-middle {
  vertical-align: middle;
}
.cursor-pointer {
  cursor: pointer;
}
.pointer-events-none {
  pointer-events: none;
}
@each $side in $sides {
  $s: str-slice($side, 0, 1);

  @if $s == 'a' {
    .b-a {
      border-width: 1px;
      border-color: var(--border-color);
      border-style: solid;
    }
  }
  @else {
    .b-#{$s} {
      border-#{$side}-width: 1px;
      border-#{$side}-color: var(--border-color);
      border-#{$side}-style: solid;
    }
  }
}
.h-100 {
  height: 100%;
}
.min-h-100vh {
  min-height: 100vh;
}
.max-h-100 {
  max-height: 100%;
}
.w-100 {
  width: 100%;
}
.max-w-100 {
  max-width: 100%;
}
.br-50 {
  border-radius: 50%;
}
